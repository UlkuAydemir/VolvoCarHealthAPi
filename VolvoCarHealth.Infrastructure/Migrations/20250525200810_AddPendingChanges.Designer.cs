// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VolvoCarHealth.Infrastructure.Data;

#nullable disable

namespace VolvoCarHealth.Infrastructure.Migrations
{
    [DbContext(typeof(VehicleContext))]
    [Migration("20250525200810_AddPendingChanges")]
    partial class AddPendingChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VolvoCarHealth.Domain.Entities.VehicleStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BatteryLevel")
                        .HasColumnType("int");

                    b.Property<float>("EngineTemperature")
                        .HasColumnType("real");

                    b.Property<DateTime>("LastMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaintenanceIntervalDays")
                        .HasColumnType("int");

                    b.Property<int>("OilLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VehicleStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
